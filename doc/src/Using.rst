.. File Using.rst

.. _using_Stuff:

Using Stuff
===========

|Stuff| is run from the shell with the following syntax:

.. code-block:: console

 $ stuff -c configuration-file [-Parameter1 Value1 -Parameter2 Value2 ...]

The parts enclosed within brackets are optional. Any
`-Parameter Value` statement in the command-line overrides the corresponding
definition in the configuration file or any default value (see below).

Input files
-----------

Output files
------------

Output catalogues
~~~~~~~~~~~~~~~~~

.. _fig_stuff_output:

.. figure:: figures/stuff_output.png
   :figwidth: 100%
   :align: center

   Example of a |Stuff| output catalog, with 4 galaxies generated in a given photometric passband

1: Object type (200=galaxy, 100=star)
2-3: Galaxy position in pixels (x,y)
4: Apparent magnitude
5: :math:`B/T` ratio
6: Bulge radius [arcsec]
7: Projected bulge axis ratio
8: Bulge position and angle [degrees, with respect to x-axis]
9: Disk scale-length [arcsec]
10: Disk aspect ratio (disk inclination)
11: Disk position angle
12: Redshift
13: De Vaucouleurs type

The Configuration file
----------------------

Each time it is run, |Stuff| looks for a configuration file. If no
configuration file is specified in the command-line, it is assumed to be
called :file:`stuff.conf` and to reside in the current directory. If no
configuration file is found, |Stuff| uses its own internal default
configuration.

Creating a configuration file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|Stuff| can generate an ASCII dump of its internal default configuration,
using the ``-d`` option. By redirecting the standard output of |Stuff| to a
file, one creates a configuration file that can easily be modified
afterward:

.. code-block:: console

$ stuff -d >stuff.conf

A more extensive dump with less commonly used parameters can be
generated by using the ``-dd`` option.

Format of the configuration file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The format is ASCII. There must be only one parameter set per line,
following the form:

     *Config-parameter      Value(s)*

Extra spaces or linefeeds are ignored. Comments must begin with a ``#``
and end with a linefeed. Values can be of different types: strings (can
be enclosed between double quotes), floats, integers, keywords or
Boolean (`Y/y` or `N/n`). Some parameters accept zero or several values,
which must then be separated by commas. Values separated by commas,
spaces, tabs or linefeeds may also be read from an ASCII file if what is
given is a filename preceded with ``@`` (e.g. `@values.txt`). Integers can be
given as decimals, in octal form (preceded by digit O), or in
hexadecimal (preceded by `0x`). The hexadecimal format is particularly
convenient for writing multiplexed bit values such as binary masks.
Environment variables, written as ``$HOME`` or ``${HOME}`` are expanded.

.. _param_list:

Configuration parameter list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here is a list of all the parameters known to |Stuff|. Please refer to
next section for a detailed description of their meaning. Some
“advanced” parameters (indicated with an asterisk) are also listed. They
must be used with caution, and may be rescoped or removed without notice
in future versions.


.. include:: keys.rst

